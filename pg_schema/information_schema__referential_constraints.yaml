public:
  information_schema:
    referential_constraints:
      type: view
      view_sql: " SELECT current_database()::information_schema.sql_identifier AS\
        \ constraint_catalog,\n    ncon.nspname::information_schema.sql_identifier\
        \ AS constraint_schema,\n    con.conname::information_schema.sql_identifier\
        \ AS constraint_name,\n        CASE\n            WHEN npkc.nspname IS NULL\
        \ THEN NULL::name\n            ELSE current_database()\n        END::information_schema.sql_identifier\
        \ AS unique_constraint_catalog,\n    npkc.nspname::information_schema.sql_identifier\
        \ AS unique_constraint_schema,\n    pkc.conname::information_schema.sql_identifier\
        \ AS unique_constraint_name,\n        CASE con.confmatchtype\n           \
        \ WHEN 'f'::\"char\" THEN 'FULL'::text\n            WHEN 'p'::\"char\" THEN\
        \ 'PARTIAL'::text\n            WHEN 's'::\"char\" THEN 'NONE'::text\n    \
        \        ELSE NULL::text\n        END::information_schema.character_data AS\
        \ match_option,\n        CASE con.confupdtype\n            WHEN 'c'::\"char\"\
        \ THEN 'CASCADE'::text\n            WHEN 'n'::\"char\" THEN 'SET NULL'::text\n\
        \            WHEN 'd'::\"char\" THEN 'SET DEFAULT'::text\n            WHEN\
        \ 'r'::\"char\" THEN 'RESTRICT'::text\n            WHEN 'a'::\"char\" THEN\
        \ 'NO ACTION'::text\n            ELSE NULL::text\n        END::information_schema.character_data\
        \ AS update_rule,\n        CASE con.confdeltype\n            WHEN 'c'::\"\
        char\" THEN 'CASCADE'::text\n            WHEN 'n'::\"char\" THEN 'SET NULL'::text\n\
        \            WHEN 'd'::\"char\" THEN 'SET DEFAULT'::text\n            WHEN\
        \ 'r'::\"char\" THEN 'RESTRICT'::text\n            WHEN 'a'::\"char\" THEN\
        \ 'NO ACTION'::text\n            ELSE NULL::text\n        END::information_schema.character_data\
        \ AS delete_rule\n   FROM pg_namespace ncon\n     JOIN pg_constraint con ON\
        \ ncon.oid = con.connamespace\n     JOIN pg_class c ON con.conrelid = c.oid\
        \ AND con.contype = 'f'::\"char\"\n     LEFT JOIN pg_depend d1 ON d1.objid\
        \ = con.oid AND d1.classid = 'pg_constraint'::regclass::oid AND d1.refclassid\
        \ = 'pg_class'::regclass::oid AND d1.refobjsubid = 0\n     LEFT JOIN pg_depend\
        \ d2 ON d2.refclassid = 'pg_constraint'::regclass::oid AND d2.classid = 'pg_class'::regclass::oid\
        \ AND d2.objid = d1.refobjid AND d2.objsubid = 0 AND d2.deptype = 'i'::\"\
        char\"\n     LEFT JOIN pg_constraint pkc ON pkc.oid = d2.refobjid AND (pkc.contype\
        \ = ANY (ARRAY['p'::\"char\", 'u'::\"char\"])) AND pkc.conrelid = con.confrelid\n\
        \     LEFT JOIN pg_namespace npkc ON pkc.connamespace = npkc.oid\n  WHERE\
        \ pg_has_role(c.relowner, 'USAGE'::text) OR has_table_privilege(c.oid, 'INSERT,\
        \ UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(c.oid,\
        \ 'INSERT, UPDATE, REFERENCES'::text);"
      schema:
        constraint_catalog: varchar(64)
        constraint_schema: varchar(64)
        constraint_name: varchar(64)
        unique_constraint_catalog: varchar(64)
        unique_constraint_schema: varchar(64)
        unique_constraint_name: varchar(64)
        match_option: varchar(256)
        update_rule: varchar(256)
        delete_rule: varchar(256)
      pg_types:
        constraint_catalog: name
        constraint_schema: name
        constraint_name: name
        unique_constraint_catalog: name
        unique_constraint_schema: name
        unique_constraint_name: name
        match_option: varchar
        update_rule: varchar
        delete_rule: varchar
      rows: []
