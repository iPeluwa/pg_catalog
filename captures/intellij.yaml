- query: SET extra_float_digits = 3
  parameters: []
  result: []
  success: true
  error_details: null
- query: SET application_name = ''
  parameters: []
  result: []
  success: true
  error_details: null
- query: select version()
  parameters: []
  result:
  - version: PostgreSQL 17.4.0
  success: true
  error_details: null
- query: SET application_name = 'IntelliJ IDEA 2025.1.1.1'
  parameters: []
  result: []
  success: true
  error_details: null
- query: select current_database() as a, current_schemas(false) as b
  parameters: []
  result:
  - a: pgtry
    b: null
  success: true
  error_details: null
- query: SET extra_float_digits = 3
  parameters: []
  result: []
  success: true
  error_details: null
- query: SET application_name = ''
  parameters: []
  result: []
  success: true
  error_details: null
- query: select version()
  parameters: []
  result:
  - version: PostgreSQL 17.4.0
  success: true
  error_details: null
- query: SET application_name = 'IntelliJ IDEA 2025.1.1.1'
  parameters: []
  result: []
  success: true
  error_details: null
- query: select current_database() as a, current_schemas(false) as b
  parameters: []
  result:
  - a: pgtry
    b: null
  success: true
  error_details: null
- query: select current_database(), current_schema(), current_user
  parameters: []
  result:
  - current_database: pgtry
    current_schema: public
    current_user: admin
  success: true
  error_details: null
- query: select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
  parameters: []
  result:
  - startup_time: 1748528572.0
  success: true
  error_details: null
- query: |-
    select L.transactionid::varchar::bigint as transaction_id
    from pg_catalog.pg_locks L
    where L.transactionid is not null
    order by pg_catalog.age(L.transactionid) desc
    limit 1
  parameters: []
  result: []
  success: true
  error_details: null
- query: |-
    select case
      when pg_catalog.pg_is_in_recovery()
        then null
      else
        (pg_catalog.txid_current() % 4294967296)::varchar::bigint
      end as current_txid
  parameters: []
  result:
  - current_txid: 2
  success: true
  error_details: null
- query: |-
    select N.oid::bigint as id,
           datname as name,
           D.description,
           datistemplate as is_template,
           datallowconn as allow_connections,
           pg_catalog.pg_get_userbyid(N.datdba) as "owner"
    from pg_catalog.pg_database N
      left join pg_catalog.pg_shdescription D on N.oid = D.objoid
    order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
  parameters: []
  result:
  - allow_connections: true
    description: null
    id: 27734
    is_template: false
    name: pgtry
    owner: postgres
  - allow_connections: true
    description: default template for new databases
    id: 1
    is_template: true
    name: template1
    owner: postgres
  - allow_connections: false
    description: unmodifiable empty database
    id: 4
    is_template: true
    name: template0
    owner: postgres
  - allow_connections: true
    description: default administrative connection database
    id: 5
    is_template: false
    name: postgres
    owner: postgres
  success: true
  error_details: null
- query: |-
    select N.oid::bigint as id,
           N.xmin as state_number,
           nspname as name,
           D.description,
           pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
    from pg_catalog.pg_namespace N
      left join pg_catalog.pg_description D on N.oid = D.objoid
    order by case when nspname = pg_catalog.current_schema() then -1::bigint else N.oid::bigint end
  parameters: []
  result:
  - description: standard public schema
    id: 2200
    name: public
    owner: postgres
    state_number: 1
  - description: system catalog schema
    id: 11
    name: pg_catalog
    owner: postgres
    state_number: 1
  - description: reserved schema for TOAST tables
    id: 99
    name: pg_toast
    owner: postgres
    state_number: 1
  - description: null
    id: 12782
    name: information_schema
    owner: postgres
    state_number: 1
  success: true
  error_details: null
- query: show DateStyle
  parameters: []
  result:
  - name: datestyle
    value: ISO, MDY
  success: true
  error_details: null
- query: |-
    select name, is_dst from pg_catalog.pg_timezone_names
    union distinct
    select abbrev as name, is_dst from pg_catalog.pg_timezone_abbrevs
  parameters: []
  result:
  - is_dst: false
    name: ACT
  - is_dst: false
    name: BORT
  - is_dst: false
    name: BTT
  - is_dst: true
    name: CHADT
  - is_dst: false
    name: GFT
  - is_dst: false
    name: JST
  - is_dst: true
    name: KDT
  - is_dst: false
    name: MAWT
  - is_dst: true
    name: MDT
  - is_dst: false
    name: MHT
  - is_dst: false
    name: MSK
  - is_dst: false
    name: PET
  - is_dst: false
    name: UT
  - is_dst: false
    name: VLAST
  - is_dst: false
    name: Indian/Mauritius
  - is_dst: true
    name: Atlantic/Canary
  - is_dst: true
    name: Atlantic/Jan_Mayen
  - is_dst: true
    name: Poland
  - is_dst: false
    name: Pacific/Guadalcanal
  - is_dst: false
    name: Pacific/Tahiti
  - is_dst: false
    name: Pacific/Honolulu
  - is_dst: false
    name: Pacific/Enderbury
  - is_dst: false
    name: NZ
  - is_dst: false
    name: America/Catamarca
  - is_dst: true
    name: America/Nuuk
  - is_dst: true
    name: America/Santa_Isabel
  - is_dst: true
    name: America/Rainy_River
  - is_dst: true
    name: America/Inuvik
  - is_dst: true
    name: America/Louisville
  - is_dst: true
    name: America/Thule
  - is_dst: true
    name: America/Cambridge_Bay
  - is_dst: false
    name: America/Virgin
  - is_dst: false
    name: Australia/North
  - is_dst: false
    name: Australia/Brisbane
  - is_dst: false
    name: Australia/Tasmania
  - is_dst: false
    name: Australia/Darwin
  - is_dst: false
    name: Australia/LHI
  - is_dst: false
    name: Etc/GMT-1
  - is_dst: false
    name: Etc/GMT-9
  - is_dst: false
    name: Asia/Baku
  - is_dst: false
    name: Asia/Oral
  - is_dst: false
    name: Asia/Yakutsk
  - is_dst: false
    name: Asia/Rangoon
  - is_dst: false
    name: Antarctica/Rothera
  - is_dst: true
    name: CET
  - is_dst: false
    name: Zulu
  - is_dst: true
    name: Europe/Luxembourg
  - is_dst: true
    name: Europe/Dublin
  - is_dst: false
    name: Europe/Saratov
  - is_dst: true
    name: Europe/Lisbon
  - is_dst: true
    name: Europe/Sarajevo
  - is_dst: true
    name: Europe/Budapest
  - is_dst: false
    name: Europe/Simferopol
  - is_dst: false
    name: Europe/Volgograd
  - is_dst: false
    name: ROK
  - is_dst: false
    name: Africa/Juba
  - is_dst: false
    name: Africa/Addis_Ababa
  - is_dst: false
    name: Africa/Bujumbura
  - is_dst: true
    name: Africa/El_Aaiun
  - is_dst: false
    name: Africa/Kigali
  - is_dst: true
    name: ACDT
  - is_dst: false
    name: ACST
  - is_dst: false
    name: AWST
  - is_dst: false
    name: FJT
  - is_dst: false
    name: FKT
  - is_dst: false
    name: KST
  - is_dst: false
    name: LKT
  - is_dst: false
    name: MMT
  - is_dst: false
    name: MPT
  - is_dst: false
    name: NFT
  - is_dst: false
    name: PST
  - is_dst: true
    name: PYST
  - is_dst: false
    name: SGT
  - is_dst: true
    name: WETDST
  - is_dst: false
    name: Z
  - is_dst: false
    name: Indian/Cocos
  - is_dst: false
    name: Atlantic/Reykjavik
  - is_dst: true
    name: Atlantic/Madeira
  - is_dst: true
    name: US/Aleutian
  - is_dst: true
    name: US/Central
  - is_dst: false
    name: US/Samoa
  - is_dst: false
    name: Kwajalein
  - is_dst: false
    name: Pacific/Apia
  - is_dst: false
    name: America/Puerto_Rico
  - is_dst: true
    name: America/Rankin_Inlet
  - is_dst: false
    name: America/Lower_Princes
  - is_dst: true
    name: America/Chicago
  - is_dst: false
    name: America/Managua
  - is_dst: true
    name: America/Halifax
  - is_dst: false
    name: America/Sao_Paulo
  - is_dst: false
    name: America/Blanc-Sablon
  - is_dst: true
    name: America/Indiana/Petersburg
  - is_dst: false
    name: America/St_Vincent
  - is_dst: false
    name: America/Caracas
  - is_dst: true
    name: America/Miquelon
  - is_dst: false
    name: America/Mendoza
  - is_dst: false
    name: Australia/Sydney
  - is_dst: false
    name: Australia/Broken_Hill
  - is_dst: false
    name: Etc/GMT-5
  - is_dst: false
    name: Etc/GMT-3
  - is_dst: false
    name: Asia/Qostanay
  - is_dst: true
    name: Asia/Jerusalem
  - is_dst: false
    name: Asia/Manila
  - is_dst: false
    name: Asia/Barnaul
  - is_dst: false
    name: Asia/Dacca
  - is_dst: false
    name: Asia/Singapore
  - is_dst: false
    name: Asia/Saigon
  - is_dst: true
    name: MET
  - is_dst: true
    name: Portugal
  - is_dst: false
    name: Antarctica/Palmer
  - is_dst: false
    name: Antarctica/DumontDUrville
  - is_dst: true
    name: Europe/Jersey
  - is_dst: true
    name: Europe/Vilnius
  - is_dst: true
    name: Europe/Monaco
  - is_dst: true
    name: Europe/Andorra
  - is_dst: true
    name: Europe/Tallinn
  - is_dst: true
    name: Europe/Bucharest
  - is_dst: true
    name: Mexico/BajaNorte
  - is_dst: false
    name: Africa/Mbabane
  - is_dst: false
    name: Africa/Banjul
  - is_dst: false
    name: Chile/EasterIsland
  - is_dst: true
    name: AKDT
  - is_dst: true
    name: ALMST
  - is_dst: false
    name: AMST
  - is_dst: false
    name: AST
  - is_dst: true
    name: CETDST
  - is_dst: true
    name: EGST
  - is_dst: false
    name: LHST
  - is_dst: false
    name: NOVST
  - is_dst: false
    name: PETST
  - is_dst: false
    name: VOLT
  - is_dst: false
    name: VUT
  - is_dst: true
    name: WADT
  - is_dst: true
    name: WDT
  - is_dst: false
    name: WET
  - is_dst: false
    name: XJT
  - is_dst: true
    name: US/Alaska
  - is_dst: true
    name: US/Mountain
  - is_dst: false
    name: Pacific/Kwajalein
  - is_dst: false
    name: Pacific/Guam
  - is_dst: false
    name: Pacific/Gambier
  - is_dst: false
    name: Pacific/Pago_Pago
  - is_dst: false
    name: Universal
  - is_dst: false
    name: America/Recife
  - is_dst: false
    name: America/Paramaribo
  - is_dst: false
    name: America/Santarem
  - is_dst: true
    name: America/Ciudad_Juarez
  - is_dst: true
    name: America/Edmonton
  - is_dst: false
    name: America/Creston
  - is_dst: true
    name: America/Nassau
  - is_dst: false
    name: America/Chihuahua
  - is_dst: true
    name: America/Montreal
  - is_dst: true
    name: America/Indianapolis
  - is_dst: true
    name: America/Havana
  - is_dst: false
    name: America/Cayman
  - is_dst: false
    name: America/Bahia
  - is_dst: false
    name: America/El_Salvador
  - is_dst: true
    name: America/Toronto
  - is_dst: true
    name: America/Ensenada
  - is_dst: true
    name: America/Ojinaga
  - is_dst: false
    name: America/Costa_Rica
  - is_dst: true
    name: America/Iqaluit
  - is_dst: true
    name: America/Thunder_Bay
  - is_dst: false
    name: Australia/Adelaide
  - is_dst: false
    name: Australia/Eucla
  - is_dst: false
    name: Australia/Currie
  - is_dst: false
    name: Etc/GMT+12
  - is_dst: false
    name: Etc/GMT+3
  - is_dst: false
    name: Etc/GMT+2
  - is_dst: false
    name: Etc/GMT+0
  - is_dst: false
    name: Asia/Brunei
  - is_dst: false
    name: Asia/Amman
  - is_dst: false
    name: Asia/Taipei
  - is_dst: false
    name: Asia/Dili
  - is_dst: false
    name: Asia/Magadan
  - is_dst: false
    name: Asia/Bangkok
  - is_dst: false
    name: Asia/Ho_Chi_Minh
  - is_dst: true
    name: Europe/Vaduz
  - is_dst: true
    name: Europe/Tirane
  - is_dst: true
    name: Europe/Kiev
  - is_dst: true
    name: Europe/Isle_of_Man
  - is_dst: true
    name: Europe/Rome
  - is_dst: true
    name: Europe/Mariehamn
  - is_dst: true
    name: Europe/Warsaw
  - is_dst: false
    name: Africa/Nairobi
  - is_dst: false
    name: Africa/Gaborone
  - is_dst: false
    name: Africa/Bissau
  - is_dst: false
    name: Africa/Djibouti
  - is_dst: false
    name: Canada/Saskatchewan
  - is_dst: false
    name: ART
  - is_dst: false
    name: AZT
  - is_dst: false
    name: CCT
  - is_dst: false
    name: EASST
  - is_dst: false
    name: EAST
  - is_dst: false
    name: FET
  - is_dst: false
    name: GAMT
  - is_dst: true
    name: IDT
  - is_dst: false
    name: IRT
  - is_dst: false
    name: MAGST
  - is_dst: true
    name: MSD
  - is_dst: false
    name: NPT
  - is_dst: false
    name: NUT
  - is_dst: false
    name: PWT
  - is_dst: false
    name: TOT
  - is_dst: false
    name: UCT
  - is_dst: false
    name: UYT
  - is_dst: false
    name: VET
  - is_dst: false
    name: Indian/Maldives
  - is_dst: false
    name: Indian/Kerguelen
  - is_dst: false
    name: Atlantic/South_Georgia
  - is_dst: false
    name: US/Arizona
  - is_dst: true
    name: US/Indiana-Starke
  - is_dst: false
    name: Pacific/Tongatapu
  - is_dst: false
    name: Pacific/Wallis
  - is_dst: false
    name: Pacific/Niue
  - is_dst: false
    name: Pacific/Ponape
  - is_dst: false
    name: Libya
  - is_dst: false
    name: America/Campo_Grande
  - is_dst: true
    name: America/Indiana/Vevay
  - is_dst: false
    name: America/Argentina/San_Luis
  - is_dst: false
    name: America/Argentina/Rio_Gallegos
  - is_dst: false
    name: America/Argentina/Cordoba
  - is_dst: true
    name: America/Yellowknife
  - is_dst: false
    name: America/Monterrey
  - is_dst: false
    name: America/Guayaquil
  - is_dst: false
    name: America/Merida
  - is_dst: false
    name: America/Belem
  - is_dst: true
    name: America/Glace_Bay
  - is_dst: false
    name: America/Grenada
  - is_dst: true
    name: America/St_Johns
  - is_dst: false
    name: America/Asuncion
  - is_dst: true
    name: America/Pangnirtung
  - is_dst: false
    name: America/Swift_Current
  - is_dst: false
    name: America/Dawson_Creek
  - is_dst: false
    name: Etc/GMT+4
  - is_dst: false
    name: Etc/GMT-7
  - is_dst: false
    name: Etc/GMT+1
  - is_dst: false
    name: Etc/GMT-4
  - is_dst: false
    name: Asia/Thimphu
  - is_dst: false
    name: Asia/Muscat
  - is_dst: false
    name: Asia/Seoul
  - is_dst: false
    name: Asia/Almaty
  - is_dst: true
    name: Asia/Beirut
  - is_dst: false
    name: Antarctica/Casey
  - is_dst: false
    name: ROC
  - is_dst: true
    name: Europe/Zurich
  - is_dst: true
    name: Europe/Helsinki
  - is_dst: true
    name: Europe/Belgrade
  - is_dst: false
    name: Europe/Ulyanovsk
  - is_dst: true
    name: Europe/London
  - is_dst: true
    name: Navajo
  - is_dst: false
    name: PRC
  - is_dst: true
    name: EET
  - is_dst: false
    name: Africa/Mogadishu
  - is_dst: false
    name: Africa/Malabo
  - is_dst: false
    name: Africa/Asmara
  - is_dst: false
    name: Africa/Bamako
  - is_dst: false
    name: Africa/Luanda
  - is_dst: true
    name: Africa/Ceuta
  - is_dst: false
    name: Factory
  - is_dst: false
    name: BRT
  - is_dst: true
    name: EETDST
  - is_dst: false
    name: GEST
  - is_dst: false
    name: GET
  - is_dst: false
    name: HKT
  - is_dst: false
    name: IRKT
  - is_dst: false
    name: IST
  - is_dst: false
    name: KGT
  - is_dst: false
    name: KRAST
  - is_dst: false
    name: KRAT
  - is_dst: false
    name: NST
  - is_dst: false
    name: PKT
  - is_dst: false
    name: TAHT
  - is_dst: false
    name: TRUT
  - is_dst: false
    name: ULAT
  - is_dst: true
    name: WGST
  - is_dst: false
    name: Indian/Mayotte
  - is_dst: false
    name: Indian/Comoro
  - is_dst: true
    name: Atlantic/Faroe
  - is_dst: true
    name: Atlantic/Faeroe
  - is_dst: true
    name: US/Eastern
  - is_dst: false
    name: Pacific/Nauru
  - is_dst: false
    name: Pacific/Majuro
  - is_dst: false
    name: Pacific/Truk
  - is_dst: false
    name: America/Port_of_Spain
  - is_dst: false
    name: America/Rosario
  - is_dst: false
    name: America/Bahia_Banderas
  - is_dst: false
    name: America/Argentina/Tucuman
  - is_dst: false
    name: America/Argentina/Buenos_Aires
  - is_dst: false
    name: America/Jujuy
  - is_dst: true
    name: America/Anchorage
  - is_dst: false
    name: America/Montevideo
  - is_dst: true
    name: America/Adak
  - is_dst: false
    name: Australia/Lord_Howe
  - is_dst: false
    name: Etc/GMT-6
  - is_dst: false
    name: Etc/GMT+5
  - is_dst: false
    name: Asia/Thimbu
  - is_dst: false
    name: Asia/Ulaanbaatar
  - is_dst: false
    name: Asia/Kuching
  - is_dst: true
    name: Asia/Hebron
  - is_dst: false
    name: Asia/Tomsk
  - is_dst: false
    name: Asia/Chita
  - is_dst: true
    name: Asia/Gaza
  - is_dst: false
    name: Asia/Aqtau
  - is_dst: false
    name: Asia/Choibalsan
  - is_dst: false
    name: Antarctica/Davis
  - is_dst: false
    name: Antarctica/Syowa
  - is_dst: true
    name: Antarctica/Troll
  - is_dst: false
    name: GMT-0
  - is_dst: false
    name: Jamaica
  - is_dst: false
    name: Europe/Moscow
  - is_dst: true
    name: Europe/Guernsey
  - is_dst: true
    name: Europe/Busingen
  - is_dst: true
    name: GB
  - is_dst: false
    name: GMT0
  - is_dst: false
    name: Hongkong
  - is_dst: false
    name: Africa/Lome
  - is_dst: false
    name: Africa/Algiers
  - is_dst: false
    name: Africa/Lagos
  - is_dst: false
    name: Africa/Brazzaville
  - is_dst: false
    name: Africa/Kinshasa
  - is_dst: false
    name: Chile/Continental
  - is_dst: true
    name: AESST
  - is_dst: false
    name: AEST
  - is_dst: true
    name: AWSST
  - is_dst: false
    name: AZST
  - is_dst: false
    name: BDT
  - is_dst: false
    name: BOT
  - is_dst: false
    name: BRA
  - is_dst: true
    name: BST
  - is_dst: false
    name: GYT
  - is_dst: false
    name: MET
  - is_dst: true
    name: METDST
  - is_dst: false
    name: MVT
  - is_dst: false
    name: NZST
  - is_dst: false
    name: OMSST
  - is_dst: false
    name: PHT
  - is_dst: false
    name: PMST
  - is_dst: true
    name: SADT
  - is_dst: false
    name: TJT
  - is_dst: true
    name: UZST
  - is_dst: false
    name: WAST
  - is_dst: false
    name: YAKT
  - is_dst: false
    name: ZULU
  - is_dst: true
    name: Atlantic/Bermuda
  - is_dst: false
    name: Brazil/Acre
  - is_dst: false
    name: Pacific/Yap
  - is_dst: false
    name: Pacific/Auckland
  - is_dst: false
    name: Pacific/Bougainville
  - is_dst: true
    name: EST5EDT
  - is_dst: false
    name: America/Santo_Domingo
  - is_dst: true
    name: America/Scoresbysund
  - is_dst: false
    name: America/Guyana
  - is_dst: true
    name: America/Nipigon
  - is_dst: true
    name: America/Goose_Bay
  - is_dst: false
    name: America/Boa_Vista
  - is_dst: false
    name: America/Argentina/ComodRivadavia
  - is_dst: false
    name: America/La_Paz
  - is_dst: false
    name: America/Regina
  - is_dst: false
    name: America/Belize
  - is_dst: false
    name: America/Tortola
  - is_dst: false
    name: America/Fortaleza
  - is_dst: true
    name: America/Denver
  - is_dst: false
    name: America/Cordoba
  - is_dst: true
    name: America/Shiprock
  - is_dst: false
    name: America/Araguaina
  - is_dst: true
    name: America/Nome
  - is_dst: false
    name: America/St_Kitts
  - is_dst: false
    name: America/Danmarkshavn
  - is_dst: false
    name: Australia/ACT
  - is_dst: false
    name: Etc/Universal
  - is_dst: false
    name: Etc/GMT-8
  - is_dst: false
    name: Etc/GMT
  - is_dst: false
    name: Etc/GMT-14
  - is_dst: false
    name: Etc/GMT0
  - is_dst: false
    name: Asia/Yekaterinburg
  - is_dst: false
    name: Asia/Riyadh
  - is_dst: false
    name: Asia/Ashkhabad
  - is_dst: false
    name: Asia/Hong_Kong
  - is_dst: true
    name: Asia/Famagusta
  - is_dst: false
    name: Antarctica/South_Pole
  - is_dst: true
    name: GB-Eire
  - is_dst: false
    name: Europe/Astrakhan
  - is_dst: true
    name: Europe/Chisinau
  - is_dst: true
    name: Europe/Sofia
  - is_dst: false
    name: Mexico/BajaSur
  - is_dst: false
    name: Africa/Dakar
  - is_dst: true
    name: Africa/Cairo
  - is_dst: false
    name: Africa/Kampala
  - is_dst: false
    name: Africa/Lusaka
  - is_dst: false
    name: ACWST
  - is_dst: false
    name: AMT
  - is_dst: true
    name: AZOST
  - is_dst: false
    name: COT
  - is_dst: false
    name: DAVT
  - is_dst: false
    name: EAT
  - is_dst: true
    name: EEST
  - is_dst: false
    name: EGT
  - is_dst: false
    name: FKST
  - is_dst: false
    name: HST
  - is_dst: true
    name: KGST
  - is_dst: false
    name: LIGT
  - is_dst: false
    name: PONT
  - is_dst: false
    name: PYT
  - is_dst: false
    name: TMT
  - is_dst: false
    name: VLAT
  - is_dst: false
    name: WAKT
  - is_dst: false
    name: YAPT
  - is_dst: false
    name: US/Hawaii
  - is_dst: false
    name: Brazil/DeNoronha
  - is_dst: false
    name: Pacific/Palau
  - is_dst: false
    name: Pacific/Chatham
  - is_dst: false
    name: Pacific/Noumea
  - is_dst: false
    name: Pacific/Pitcairn
  - is_dst: false
    name: Turkey
  - is_dst: true
    name: America/Resolute
  - is_dst: true
    name: America/Detroit
  - is_dst: false
    name: America/Coral_Harbour
  - is_dst: false
    name: America/Antigua
  - is_dst: true
    name: America/Boise
  - is_dst: false
    name: America/Argentina/Catamarca
  - is_dst: true
    name: America/Moncton
  - is_dst: false
    name: America/Kralendijk
  - is_dst: true
    name: America/Knox_IN
  - is_dst: false
    name: America/Noronha
  - is_dst: false
    name: America/Marigot
  - is_dst: false
    name: America/Coyhaique
  - is_dst: false
    name: America/Aruba
  - is_dst: false
    name: Etc/GMT-13
  - is_dst: false
    name: Etc/GMT+10
  - is_dst: false
    name: Etc/GMT-12
  - is_dst: false
    name: Asia/Dushanbe
  - is_dst: false
    name: Asia/Karachi
  - is_dst: false
    name: Asia/Vladivostok
  - is_dst: false
    name: Asia/Vientiane
  - is_dst: false
    name: Asia/Ulan_Bator
  - is_dst: false
    name: Asia/Damascus
  - is_dst: false
    name: Asia/Atyrau
  - is_dst: false
    name: Asia/Hovd
  - is_dst: false
    name: Asia/Dubai
  - is_dst: false
    name: Europe/Istanbul
  - is_dst: true
    name: Europe/Kyiv
  - is_dst: true
    name: Europe/Malta
  - is_dst: true
    name: Europe/Athens
  - is_dst: false
    name: Singapore
  - is_dst: true
    name: Canada/Atlantic
  - is_dst: false
    name: Iceland
  - is_dst: false
    name: ANAT
  - is_dst: false
    name: CAST
  - is_dst: true
    name: CLST
  - is_dst: false
    name: CLT
  - is_dst: true
    name: EDT
  - is_dst: false
    name: MART
  - is_dst: false
    name: MYT
  - is_dst: false
    name: SCT
  - is_dst: false
    name: TFT
  - is_dst: false
    name: UTC
  - is_dst: false
    name: WAT
  - is_dst: false
    name: Indian/Mahe
  - is_dst: false
    name: Atlantic/Cape_Verde
  - is_dst: false
    name: Pacific/Wake
  - is_dst: false
    name: America/Punta_Arenas
  - is_dst: false
    name: America/Dominica
  - is_dst: false
    name: America/Argentina/San_Juan
  - is_dst: false
    name: America/Mazatlan
  - is_dst: false
    name: America/Buenos_Aires
  - is_dst: true
    name: America/Los_Angeles
  - is_dst: true
    name: America/Fort_Wayne
  - is_dst: true
    name: America/North_Dakota/Beulah
  - is_dst: true
    name: America/Grand_Turk
  - is_dst: false
    name: America/Hermosillo
  - is_dst: true
    name: America/Godthab
  - is_dst: false
    name: America/Barbados
  - is_dst: false
    name: America/Curacao
  - is_dst: false
    name: Australia/Canberra
  - is_dst: false
    name: Australia/Hobart
  - is_dst: false
    name: Etc/GMT+9
  - is_dst: false
    name: Etc/GMT-2
  - is_dst: false
    name: Etc/UTC
  - is_dst: false
    name: NZ-CHAT
  - is_dst: false
    name: Asia/Shanghai
  - is_dst: false
    name: Asia/Tokyo
  - is_dst: false
    name: Asia/Bahrain
  - is_dst: false
    name: Asia/Pontianak
  - is_dst: false
    name: Asia/Kashgar
  - is_dst: false
    name: Asia/Tehran
  - is_dst: true
    name: Asia/Nicosia
  - is_dst: false
    name: Asia/Srednekolymsk
  - is_dst: false
    name: Antarctica/McMurdo
  - is_dst: true
    name: Europe/Ljubljana
  - is_dst: true
    name: Europe/Skopje
  - is_dst: true
    name: Europe/San_Marino
  - is_dst: true
    name: Europe/Uzhgorod
  - is_dst: true
    name: Europe/Tiraspol
  - is_dst: true
    name: Europe/Oslo
  - is_dst: true
    name: Europe/Riga
  - is_dst: true
    name: Europe/Copenhagen
  - is_dst: true
    name: posixrules
  - is_dst: false
    name: Iran
  - is_dst: true
    name: WET
  - is_dst: false
    name: W-SU
  - is_dst: false
    name: Africa/Ndjamena
  - is_dst: false
    name: Africa/Harare
  - is_dst: false
    name: Africa/Porto-Novo
  - is_dst: false
    name: Africa/Lubumbashi
  - is_dst: false
    name: Africa/Accra
  - is_dst: false
    name: AFT
  - is_dst: false
    name: AZOT
  - is_dst: true
    name: CEST
  - is_dst: false
    name: CKT
  - is_dst: false
    name: CXT
  - is_dst: false
    name: IRKST
  - is_dst: false
    name: JAYT
  - is_dst: true
    name: MEST
  - is_dst: false
    name: MST
  - is_dst: true
    name: NDT
  - is_dst: false
    name: TKT
  - is_dst: false
    name: YAKST
  - is_dst: false
    name: Pacific/Easter
  - is_dst: false
    name: Pacific/Pohnpei
  - is_dst: false
    name: America/Manaus
  - is_dst: true
    name: America/New_York
  - is_dst: false
    name: America/Porto_Acre
  - is_dst: false
    name: America/Cancun
  - is_dst: false
    name: America/Atikokan
  - is_dst: false
    name: America/Cayenne
  - is_dst: true
    name: America/Indiana/Vincennes
  - is_dst: true
    name: America/Indiana/Knox
  - is_dst: false
    name: America/Eirunepe
  - is_dst: false
    name: America/Whitehorse
  - is_dst: true
    name: America/Kentucky/Monticello
  - is_dst: false
    name: America/Montserrat
  - is_dst: false
    name: America/Panama
  - is_dst: true
    name: America/Juneau
  - is_dst: true
    name: America/Sitka
  - is_dst: false
    name: America/Anguilla
  - is_dst: false
    name: Australia/Victoria
  - is_dst: false
    name: Australia/South
  - is_dst: false
    name: Australia/West
  - is_dst: false
    name: Australia/NSW
  - is_dst: false
    name: Etc/GMT+11
  - is_dst: true
    name: Asia/Tel_Aviv
  - is_dst: false
    name: Asia/Pyongyang
  - is_dst: false
    name: Asia/Samarkand
  - is_dst: false
    name: Asia/Tashkent
  - is_dst: false
    name: Asia/Qyzylorda
  - is_dst: false
    name: Asia/Kamchatka
  - is_dst: false
    name: Asia/Harbin
  - is_dst: false
    name: Asia/Aqtobe
  - is_dst: false
    name: Asia/Sakhalin
  - is_dst: true
    name: PST8PDT
  - is_dst: false
    name: Japan
  - is_dst: false
    name: Europe/Kirov
  - is_dst: true
    name: Europe/Vatican
  - is_dst: true
    name: Europe/Prague
  - is_dst: false
    name: Europe/Samara
  - is_dst: true
    name: Egypt
  - is_dst: false
    name: Africa/Conakry
  - is_dst: false
    name: Africa/Libreville
  - is_dst: true
    name: Canada/Eastern
  - is_dst: true
    name: Canada/Newfoundland
  - is_dst: false
    name: AKST
  - is_dst: false
    name: ALMT
  - is_dst: false
    name: BNT
  - is_dst: true
    name: CADT
  - is_dst: false
    name: EET
  - is_dst: false
    name: FNT
  - is_dst: false
    name: GILT
  - is_dst: false
    name: ICT
  - is_dst: false
    name: KOST
  - is_dst: false
    name: MAGT
  - is_dst: true
    name: MESZ
  - is_dst: true
    name: MUST
  - is_dst: true
    name: NZDT
  - is_dst: false
    name: PGT
  - is_dst: true
    name: ULAST
  - is_dst: false
    name: WGT
  - is_dst: true
    name: YEKST
  - is_dst: false
    name: Indian/Christmas
  - is_dst: false
    name: Indian/Reunion
  - is_dst: false
    name: Indian/Antananarivo
  - is_dst: false
    name: Pacific/Efate
  - is_dst: false
    name: Pacific/Fiji
  - is_dst: false
    name: Pacific/Saipan
  - is_dst: false
    name: Pacific/Kosrae
  - is_dst: false
    name: Pacific/Kanton
  - is_dst: false
    name: Pacific/Tarawa
  - is_dst: false
    name: Pacific/Rarotonga
  - is_dst: false
    name: America/Rio_Branco
  - is_dst: false
    name: America/Guatemala
  - is_dst: true
    name: America/Indiana/Tell_City
  - is_dst: false
    name: America/Argentina/Salta
  - is_dst: false
    name: America/Argentina/Ushuaia
  - is_dst: false
    name: America/Argentina/Mendoza
  - is_dst: false
    name: America/Dawson
  - is_dst: true
    name: America/Metlakatla
  - is_dst: false
    name: America/St_Lucia
  - is_dst: true
    name: America/Port-au-Prince
  - is_dst: true
    name: America/Winnipeg
  - is_dst: false
    name: America/Guadeloupe
  - is_dst: true
    name: America/Menominee
  - is_dst: false
    name: Etc/Greenwich
  - is_dst: false
    name: Etc/GMT-0
  - is_dst: false
    name: Asia/Khandyga
  - is_dst: false
    name: Asia/Istanbul
  - is_dst: false
    name: Asia/Krasnoyarsk
  - is_dst: false
    name: Asia/Kolkata
  - is_dst: false
    name: Asia/Dhaka
  - is_dst: false
    name: Asia/Ashgabat
  - is_dst: false
    name: Antarctica/Vostok
  - is_dst: false
    name: Antarctica/Mawson
  - is_dst: true
    name: Europe/Podgorica
  - is_dst: true
    name: Europe/Berlin
  - is_dst: true
    name: Europe/Amsterdam
  - is_dst: true
    name: Europe/Nicosia
  - is_dst: true
    name: Europe/Stockholm
  - is_dst: false
    name: Mexico/General
  - is_dst: true
    name: MST7MDT
  - is_dst: true
    name: Cuba
  - is_dst: false
    name: Africa/Timbuktu
  - is_dst: false
    name: Africa/Nouakchott
  - is_dst: false
    name: Africa/Asmera
  - is_dst: false
    name: Africa/Tripoli
  - is_dst: false
    name: Africa/Johannesburg
  - is_dst: true
    name: Canada/Pacific
  - is_dst: true
    name: Canada/Mountain
  - is_dst: true
    name: ACSST
  - is_dst: true
    name: BRST
  - is_dst: true
    name: CDT
  - is_dst: false
    name: CHUT
  - is_dst: false
    name: CST
  - is_dst: false
    name: DDUT
  - is_dst: false
    name: EST
  - is_dst: true
    name: FJST
  - is_dst: true
    name: FNST
  - is_dst: false
    name: GALT
  - is_dst: false
    name: GMT
  - is_dst: false
    name: IOT
  - is_dst: false
    name: MEZ
  - is_dst: false
    name: MUT
  - is_dst: true
    name: PDT
  - is_dst: false
    name: PETT
  - is_dst: true
    name: PKST
  - is_dst: false
    name: RET
  - is_dst: false
    name: SAST
  - is_dst: true
    name: UYST
  - is_dst: false
    name: YEKT
  - is_dst: false
    name: Atlantic/St_Helena
  - is_dst: true
    name: Atlantic/Azores
  - is_dst: true
    name: US/Michigan
  - is_dst: true
    name: US/East-Indiana
  - is_dst: false
    name: Pacific/Chuuk
  - is_dst: false
    name: Pacific/Norfolk
  - is_dst: false
    name: Pacific/Funafuti
  - is_dst: false
    name: Pacific/Johnston
  - is_dst: false
    name: Pacific/Midway
  - is_dst: false
    name: Pacific/Fakaofo
  - is_dst: true
    name: Arctic/Longyearbyen
  - is_dst: false
    name: America/St_Barthelemy
  - is_dst: false
    name: America/St_Thomas
  - is_dst: false
    name: America/Bogota
  - is_dst: true
    name: America/Indiana/Indianapolis
  - is_dst: true
    name: America/Indiana/Marengo
  - is_dst: true
    name: America/Matamoros
  - is_dst: false
    name: America/Jamaica
  - is_dst: false
    name: America/Cuiaba
  - is_dst: true
    name: America/North_Dakota/Center
  - is_dst: true
    name: America/Atka
  - is_dst: false
    name: America/Mexico_City
  - is_dst: false
    name: America/Fort_Nelson
  - is_dst: false
    name: Australia/Queensland
  - is_dst: false
    name: Australia/Yancowinna
  - is_dst: false
    name: Etc/GMT-10
  - is_dst: false
    name: Etc/UCT
  - is_dst: false
    name: Etc/GMT+7
  - is_dst: false
    name: Etc/GMT+8
  - is_dst: false
    name: Etc/GMT+6
  - is_dst: false
    name: Asia/Calcutta
  - is_dst: false
    name: Asia/Urumqi
  - is_dst: false
    name: Asia/Aden
  - is_dst: false
    name: Asia/Kuwait
  - is_dst: false
    name: Asia/Macao
  - is_dst: false
    name: Asia/Irkutsk
  - is_dst: false
    name: Asia/Qatar
  - is_dst: false
    name: Asia/Yerevan
  - is_dst: false
    name: Asia/Ust-Nera
  - is_dst: false
    name: Asia/Jakarta
  - is_dst: false
    name: Asia/Kabul
  - is_dst: false
    name: Asia/Jayapura
  - is_dst: false
    name: Asia/Makassar
  - is_dst: false
    name: Asia/Kuala_Lumpur
  - is_dst: false
    name: Asia/Anadyr
  - is_dst: false
    name: Asia/Novokuznetsk
  - is_dst: false
    name: Asia/Kathmandu
  - is_dst: false
    name: Asia/Novosibirsk
  - is_dst: false
    name: Antarctica/Macquarie
  - is_dst: true
    name: Eire
  - is_dst: true
    name: Europe/Paris
  - is_dst: false
    name: Europe/Minsk
  - is_dst: true
    name: Europe/Madrid
  - is_dst: true
    name: Europe/Belfast
  - is_dst: true
    name: Europe/Zaporozhye
  - is_dst: true
    name: Europe/Vienna
  - is_dst: true
    name: Europe/Zagreb
  - is_dst: true
    name: Europe/Brussels
  - is_dst: false
    name: Africa/Maseru
  - is_dst: false
    name: Africa/Bangui
  - is_dst: false
    name: Africa/Douala
  - is_dst: false
    name: Africa/Tunis
  - is_dst: false
    name: Africa/Blantyre
  - is_dst: false
    name: Africa/Ouagadougou
  - is_dst: false
    name: Africa/Freetown
  - is_dst: true
    name: Canada/Central
  - is_dst: true
    name: ADT
  - is_dst: true
    name: AEDT
  - is_dst: false
    name: ANAST
  - is_dst: false
    name: ARST
  - is_dst: true
    name: BDST
  - is_dst: false
    name: CET
  - is_dst: false
    name: CHAST
  - is_dst: false
    name: LHDT
  - is_dst: false
    name: LINT
  - is_dst: false
    name: NOVT
  - is_dst: false
    name: NZT
  - is_dst: false
    name: OMST
  - is_dst: true
    name: PMDT
  - is_dst: false
    name: TVT
  - is_dst: false
    name: UZT
  - is_dst: false
    name: WFT
  - is_dst: false
    name: Indian/Chagos
  - is_dst: false
    name: Atlantic/Stanley
  - is_dst: true
    name: CST6CDT
  - is_dst: true
    name: US/Pacific
  - is_dst: false
    name: Brazil/East
  - is_dst: false
    name: Brazil/West
  - is_dst: false
    name: Pacific/Port_Moresby
  - is_dst: false
    name: Pacific/Galapagos
  - is_dst: false
    name: Pacific/Marquesas
  - is_dst: false
    name: Pacific/Samoa
  - is_dst: false
    name: Pacific/Kiritimati
  - is_dst: false
    name: Greenwich
  - is_dst: false
    name: America/Lima
  - is_dst: true
    name: America/Yakutat
  - is_dst: false
    name: America/Santiago
  - is_dst: false
    name: America/Porto_Velho
  - is_dst: false
    name: America/Phoenix
  - is_dst: true
    name: America/Indiana/Winamac
  - is_dst: false
    name: America/Argentina/Jujuy
  - is_dst: false
    name: America/Argentina/La_Rioja
  - is_dst: false
    name: America/Tegucigalpa
  - is_dst: true
    name: America/Vancouver
  - is_dst: true
    name: America/Kentucky/Louisville
  - is_dst: true
    name: America/North_Dakota/New_Salem
  - is_dst: true
    name: America/Tijuana
  - is_dst: false
    name: America/Maceio
  - is_dst: false
    name: America/Martinique
  - is_dst: false
    name: Australia/Melbourne
  - is_dst: false
    name: Australia/Perth
  - is_dst: false
    name: Australia/Lindeman
  - is_dst: false
    name: Etc/GMT-11
  - is_dst: false
    name: Etc/Zulu
  - is_dst: false
    name: Asia/Katmandu
  - is_dst: false
    name: Asia/Macau
  - is_dst: false
    name: Asia/Yangon
  - is_dst: false
    name: Asia/Chongqing
  - is_dst: false
    name: Asia/Colombo
  - is_dst: false
    name: Asia/Ujung_Pandang
  - is_dst: false
    name: Asia/Tbilisi
  - is_dst: false
    name: Asia/Bishkek
  - is_dst: false
    name: Asia/Omsk
  - is_dst: false
    name: Asia/Phnom_Penh
  - is_dst: false
    name: Asia/Baghdad
  - is_dst: false
    name: Asia/Chungking
  - is_dst: true
    name: Europe/Gibraltar
  - is_dst: true
    name: Europe/Bratislava
  - is_dst: false
    name: Europe/Kaliningrad
  - is_dst: false
    name: GMT+0
  - is_dst: true
    name: Israel
  - is_dst: false
    name: Africa/Sao_Tome
  - is_dst: true
    name: Africa/Casablanca
  - is_dst: false
    name: Africa/Maputo
  - is_dst: false
    name: Africa/Niamey
  - is_dst: false
    name: Africa/Abidjan
  - is_dst: false
    name: Africa/Khartoum
  - is_dst: false
    name: Africa/Windhoek
  - is_dst: false
    name: Africa/Monrovia
  - is_dst: false
    name: Africa/Dar_es_Salaam
  - is_dst: false
    name: Canada/Yukon
  success: true
  error_details: null
- query: |-
    select R.oid::bigint as role_id, rolname as role_name,
      rolsuper is_super, rolinherit is_inherit,
      rolcreaterole can_createrole, rolcreatedb can_createdb,
      rolcanlogin can_login, rolreplication /* false */ is_replication,
      rolconnlimit conn_limit, rolvaliduntil valid_until,
      rolbypassrls /* false */ bypass_rls, rolconfig config,
      D.description
    from pg_catalog.pg_roles R
      left join pg_catalog.pg_shdescription D on D.objoid = R.oid
  parameters: []
  result:
  - bypass_rls: true
    can_createdb: true
    can_createrole: true
    can_login: true
    config: null
    conn_limit: -1
    description: null
    is_inherit: true
    is_replication: true
    is_super: true
    role_id: 10
    role_name: abadur
    valid_until: null
  - bypass_rls: false
    can_createdb: false
    can_createrole: false
    can_login: false
    config: null
    conn_limit: -1
    description: null
    is_inherit: true
    is_replication: false
    is_super: false
    role_id: 6171
    role_name: pg_database_owner
    valid_until: null
  - bypass_rls: false
    can_createdb: false
    can_createrole: false
    can_login: false
    config: null
    conn_limit: -1
    description: null
    is_inherit: true
    is_replication: false
    is_super: false
    role_id: 6181
    role_name: pg_read_all_data
    valid_until: null
  - bypass_rls: false
    can_createdb: false
    can_createrole: false
    can_login: false
    config: null
    conn_limit: -1
    description: null
    is_inherit: true
    is_replication: false
    is_super: false
    role_id: 6182
    role_name: pg_write_all_data
    valid_until: null
  - bypass_rls: false
    can_createdb: false
    can_createrole: false
    can_login: false
    config: null
    conn_limit: -1
    description: null
    is_inherit: true
    is_replication: false
    is_super: false
    role_id: 3373
    role_name: pg_monitor
    valid_until: null
  - bypass_rls: false
    can_createdb: false
    can_createrole: false
    can_login: false
    config: null
    conn_limit: -1
    description: null
    is_inherit: true
    is_replication: false
    is_super: false
    role_id: 3374
    role_name: pg_read_all_settings
    valid_until: null
  - bypass_rls: false
    can_createdb: false
    can_createrole: false
    can_login: false
    config: null
    conn_limit: -1
    description: null
    is_inherit: true
    is_replication: false
    is_super: false
    role_id: 3375
    role_name: pg_read_all_stats
    valid_until: null
  - bypass_rls: false
    can_createdb: false
    can_createrole: false
    can_login: false
    config: null
    conn_limit: -1
    description: null
    is_inherit: true
    is_replication: false
    is_super: false
    role_id: 3377
    role_name: pg_stat_scan_tables
    valid_until: null
  - bypass_rls: false
    can_createdb: false
    can_createrole: false
    can_login: false
    config: null
    conn_limit: -1
    description: null
    is_inherit: true
    is_replication: false
    is_super: false
    role_id: 4569
    role_name: pg_read_server_files
    valid_until: null
  - bypass_rls: false
    can_createdb: false
    can_createrole: false
    can_login: false
    config: null
    conn_limit: -1
    description: null
    is_inherit: true
    is_replication: false
    is_super: false
    role_id: 4570
    role_name: pg_write_server_files
    valid_until: null
  - bypass_rls: false
    can_createdb: false
    can_createrole: false
    can_login: false
    config: null
    conn_limit: -1
    description: null
    is_inherit: true
    is_replication: false
    is_super: false
    role_id: 4571
    role_name: pg_execute_server_program
    valid_until: null
  - bypass_rls: false
    can_createdb: false
    can_createrole: false
    can_login: false
    config: null
    conn_limit: -1
    description: null
    is_inherit: true
    is_replication: false
    is_super: false
    role_id: 4200
    role_name: pg_signal_backend
    valid_until: null
  - bypass_rls: false
    can_createdb: false
    can_createrole: false
    can_login: false
    config: null
    conn_limit: -1
    description: null
    is_inherit: true
    is_replication: false
    is_super: false
    role_id: 4544
    role_name: pg_checkpoint
    valid_until: null
  - bypass_rls: false
    can_createdb: false
    can_createrole: false
    can_login: false
    config: null
    conn_limit: -1
    description: null
    is_inherit: true
    is_replication: false
    is_super: false
    role_id: 6337
    role_name: pg_maintain
    valid_until: null
  - bypass_rls: false
    can_createdb: false
    can_createrole: false
    can_login: false
    config: null
    conn_limit: -1
    description: null
    is_inherit: true
    is_replication: false
    is_super: false
    role_id: 4550
    role_name: pg_use_reserved_connections
    valid_until: null
  - bypass_rls: false
    can_createdb: false
    can_createrole: false
    can_login: false
    config: null
    conn_limit: -1
    description: null
    is_inherit: true
    is_replication: false
    is_super: false
    role_id: 6304
    role_name: pg_create_subscription
    valid_until: null
  success: true
  error_details: null
- query: |-
    select member id, roleid role_id, admin_option
              from pg_catalog.pg_auth_members order by id, roleid::text
  parameters: []
  result:
  - admin_option: false
    id: 3373
    role_id: 3374
  - admin_option: false
    id: 3373
    role_id: 3375
  - admin_option: false
    id: 3373
    role_id: 3377
  success: true
  error_details: null
- query: |-
    select T.oid::bigint as id, T.spcname as name,
           T.xmin as state_number, pg_catalog.pg_get_userbyid(T.spcowner) as owner,
           pg_catalog.pg_tablespace_location(T.oid) /* null */ as location,
           T.spcoptions /* null */ as options,
           D.description as comment
    from pg_catalog.pg_tablespace T
      left join pg_catalog.pg_shdescription D on D.objoid = T.oid
    --  where pg_catalog.age(T.xmin) <= #TXAGE
  parameters: []
  result:
  - comment: null
    id: 1663
    location: null
    name: pg_default
    options: null
    owner: postgres
    state_number: 1
  - comment: null
    id: 1664
    location: null
    name: pg_global
    options: null
    owner: postgres
    state_number: 1
  success: true
  error_details: null
- query: "select T.oid as object_id,\n                 T.spcacl as acl\n          from pg_catalog.pg_tablespace T \n          union all\n          select T.oid as object_id,\n                 T.datacl as acl\n          from pg_catalog.pg_database T "
  parameters: []
  result:
  - acl: null
    object_id: 1663
  - acl: null
    object_id: 1664
  - acl: null
    object_id: 5
  - acl: null
    object_id: 1
  - acl: null
    object_id: 4
  - acl: null
    object_id: 27734
  success: true
  error_details: null
- query: |-
    select N.oid::bigint as id,
           N.xmin as state_number,
           nspname as name,
           D.description,
           pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
    from pg_catalog.pg_namespace N
      left join pg_catalog.pg_description D on N.oid = D.objoid
    order by case when nspname = pg_catalog.current_schema() then -1::bigint else N.oid::bigint end
  parameters: []
  result:
  - description: standard public schema
    id: 2200
    name: public
    owner: postgres
    state_number: 1
  - description: system catalog schema
    id: 11
    name: pg_catalog
    owner: postgres
    state_number: 1
  - description: reserved schema for TOAST tables
    id: 99
    name: pg_toast
    owner: postgres
    state_number: 1
  - description: null
    id: 12782
    name: information_schema
    owner: postgres
    state_number: 1
  success: true
  error_details: null
- query: |-
    select N.oid::bigint as id,
           N.xmin as state_number,
           nspname as name,
           D.description,
           pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
    from pg_catalog.pg_namespace N
      left join pg_catalog.pg_description D on N.oid = D.objoid
    order by case when nspname = pg_catalog.current_schema() then -1::bigint else N.oid::bigint end
  parameters: []
  result:
  - description: standard public schema
    id: 2200
    name: public
    owner: postgres
    state_number: 1
  - description: system catalog schema
    id: 11
    name: pg_catalog
    owner: postgres
    state_number: 1
  - description: reserved schema for TOAST tables
    id: 99
    name: pg_toast
    owner: postgres
    state_number: 1
  - description: null
    id: 12782
    name: information_schema
    owner: postgres
    state_number: 1
  success: true
  error_details: null
- query: |-
    select usesuper
    from pg_user
    where usename = current_user
  parameters: []
  result: []
  success: true
  error_details: null
- query: |-
    select t.oid as id,
           t.xmin as state_number,
           t.evtname as name,
           t.evtevent as event,
           t.evtfoid as routine_id,
           pg_catalog.pg_get_userbyid(t.evtowner) as owner,
           t.evttags as tags,
           case when t.evtenabled = 'D' then 1 else 0 end as is_disabled
    from pg_catalog.pg_event_trigger t
    --  where pg_catalog.age(t.xmin) <= #TXAGE
  parameters: []
  result: []
  success: true
  error_details: null
- query: |-
    select fdw.oid as id,
           fdw.xmin as state_number,
           fdw.fdwname as name,
           pr.proname as handler,
           nspc.nspname as handler_schema,
           pr2.proname as validator,
           nspc2.nspname as validator_schema,
           fdw.fdwoptions as options,
           pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
    from pg_catalog.pg_foreign_data_wrapper fdw
         left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
         left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
         left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
         left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
      --  where pg_catalog.age(fdw.xmin) <= #TXAGE
  parameters: []
  result: []
  success: true
  error_details: null
- query: |-
    select srv.oid as id,
           srv.srvfdw as fdw_id,
           srv.xmin as state_number,
           srv.srvname as name,
           srv.srvtype as type,
           srv.srvversion as version,
           srv.srvoptions as options,
           pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
    from pg_catalog.pg_foreign_server srv
      --  where pg_catalog.age(srv.xmin) <= #TXAGE
  parameters: []
  result: []
  success: true
  error_details: null
- query: |-
    select umid as id,
           srvid as server_id,
           usename as user,
           umoptions as options
    from pg_catalog.pg_user_mappings
    order by server_id
  parameters: []
  result: []
  success: true
  error_details: null
- query: "select A.oid as access_method_id,\n       A.xmin as state_number,\n       A.amname as access_method_name\n       ,\n       A.amhandler::oid as handler_id,\n       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,\n       A.amtype as access_method_type\n       \nfrom pg_am A\n  join pg_proc P on A.amhandler::oid = P.oid\n  join pg_namespace N on P.pronamespace = N.oid\n  \n--  where pg_catalog.age(A.xmin) <= #TXAGE"
  parameters: []
  result: []
  success: true
  error_details: null
- query: "select E.oid        as id,\n       E.xmin       as state_number,\n       extname      as name,\n       extversion   as version,\n       extnamespace as schema_id,\n       nspname      as schema_name\n       ,\n       array(select unnest\n             from unnest(available_versions)\n             where unnest > extversion) as available_updates\n       \nfrom pg_catalog.pg_extension E\n       join pg_namespace N on E.extnamespace = N.oid\n       left join (select name, array_agg(version) as available_versions\n                  from pg_available_extension_versions()\n                  group by name) V on E.extname = V.name\n       \n--  where pg_catalog.age(E.xmin) <= #TXAGE"
  parameters: []
  result:
  - available_updates: null
    id: 13132
    name: plpgsql
    schema_id: 11
    schema_name: pg_catalog
    state_number: 1
    version: '1.0'
  success: true
  error_details: null
- query: |-
    select cls.xmin as sequence_state_number,
           sq.seqrelid as sequence_id,
           cls.relname as sequence_name,
           pg_catalog.format_type(sq.seqtypid, null) as data_type,
           sq.seqstart as start_value,
           sq.seqincrement as inc_value,
           sq.seqmin as min_value,
           sq.seqmax as max_value,
           sq.seqcache as cache_size,
           sq.seqcycle as cycle_option,
           pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
    from pg_catalog.pg_sequence sq
        join pg_class cls on sq.seqrelid = cls.oid
        where cls.relnamespace = $1::oid
    --  and pg_catalog.age(cls.xmin) <= #TXAGE
    --  and cls.relname in ( :[*f_names] )
  parameters:
  - 2200
  result: []
  success: true
  error_details: null
- query: |-
    select T.oid as type_id,
           T.xmin as type_state_number,
           T.typname as type_name,
           T.typtype as type_sub_kind,
           T.typcategory as type_category,
           T.typrelid as class_id,
           T.typbasetype as base_type_id,
           case when T.typtype in ('c','e') then null
                else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
           T.typndims as dimensions_number,
           T.typdefault as default_expression,
           T.typnotnull as mandatory,
           pg_catalog.pg_get_userbyid(T.typowner) as "owner"
    from pg_catalog.pg_type T
             left outer join pg_catalog.pg_class C
                 on T.typrelid = C.oid
    where T.typnamespace = $1::oid
      --  and T.typname in ( :[*f_names] )
      --  and pg_catalog.age(T.xmin) <= #TXAGE
      and (T.typtype in ('d','e') or
           C.relkind = 'c'::"char" or
           (T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A')) or
           T.typtype = 'p' and not T.typisdefined)
    order by 1
  parameters:
  - 2200
  result: []
  success: true
  error_details: null
- query: |-
    select T.relkind as table_kind,
           T.relname as table_name,
           T.oid as table_id,
           T.xmin as table_state_number,
           false /* T.relhasoids */ as table_with_oids,
           T.reltablespace as tablespace_id,
           T.reloptions as options,
           T.relpersistence as persistence,
           (select pg_catalog.array_agg(inhparent::bigint order by inhseqno)::varchar from pg_catalog.pg_inherits where T.oid = inhrelid) as ancestors,
           (select pg_catalog.array_agg(inhrelid::bigint order by inhrelid)::varchar from pg_catalog.pg_inherits where T.oid = inhparent) as successors,
           T.relispartition /* false */ as is_partition,
           pg_catalog.pg_get_partkeydef(T.oid) /* null */ as partition_key,
           pg_catalog.pg_get_expr(T.relpartbound, T.oid) /* null */ as partition_expression,
           T.relam am_id,
           pg_catalog.pg_get_userbyid(T.relowner) as "owner"
    from pg_catalog.pg_class T
    where relnamespace = $1::oid
           and relkind in ('r', 'm', 'v', 'f', 'p')
    --  and pg_catalog.age(T.xmin) <= #TXAGE
    --  and T.relname in ( :[*f_names] )
    order by table_kind, table_id
  parameters:
  - 2200
  result:
  - am_id: null
    ancestors: null
    is_partition: false
    options: null
    owner: postgres
    partition_expression: null
    partition_key: null
    persistence: null
    successors: null
    table_id: 50010
    table_kind: r
    table_name: users
    table_state_number: null
    table_with_oids: false
    tablespace_id: null
  success: true
  error_details: null
- query: |-
    select ft.ftrelid as table_id,
           srv.srvname as table_server,
           ft.ftoptions as table_options,
           pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
    from pg_catalog.pg_foreign_table ft
         left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
         join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
    where cls.relnamespace = $1::oid
      --  and pg_catalog.age(ft.xmin) <= #TXAGE
      --  and cls.relname in ( :[*f_names] )
    order by table_id
  parameters:
  - 2200
  result: []
  success: true
  error_details: null
- query: "with schema_procs as (select prorettype, proargtypes, proallargtypes\n                      from pg_catalog.pg_proc\n                      where pronamespace = $1::oid\n                        /* and pg_catalog.age(xmin) <= #TXAGE */ ),\n     schema_opers as (select oprleft, oprright, oprresult\n                      from pg_catalog.pg_operator\n                      where oprnamespace = $2::oid\n                        /* and pg_catalog.age(xmin) <= #TXAGE */ ),\n     schema_aggregates as (select A.aggtranstype , A.aggmtranstype \n                           from pg_catalog.pg_aggregate A\n                           join pg_catalog.pg_proc P\n                             on A.aggfnoid = P.oid\n                           where P.pronamespace = $3::oid\n                           /* and (pg_catalog.age(A.xmin) <= #TXAGE or pg_catalog.age(P.xmin) <= #TXAGE) */),\n     schema_arg_types as ( select prorettype as type_id\n                           from schema_procs\n                           union\n                           select distinct unnest(proargtypes) as type_id\n                           from schema_procs\n                           union\n                           select distinct unnest(proallargtypes) as type_id\n                           from schema_procs\n                           union\n                           select oprleft as type_id\n                           from schema_opers\n                           where oprleft is not null\n                           union\n                           select oprright as type_id\n                           from schema_opers\n                           where oprright is not null\n                           union\n                           select oprresult as type_id\n                           from schema_opers\n                           where oprresult is not null\n                           union\n                           select aggtranstype::oid as type_id\n                           from schema_aggregates\n                           union\n                           select aggmtranstype::oid as type_id\n                           from schema_aggregates\n                           \n                           )\nselect type_id, pg_catalog.format_type(type_id, null) as type_spec\nfrom schema_arg_types\nwhere type_id <> 0 -- todo unclear how to frag"
  parameters:
  - 2200
  - 2200
  - 2200
  result: []
  success: true
  error_details: null
- query: "with languages as (select oid as lang_oid, lanname as lang\n                   from pg_catalog.pg_language),\n     routines as (select proname as r_name,\n                         prolang as lang_oid,\n                         oid as r_id,\n                         xmin as r_state_number,\n                         proargnames as arg_names,\n                         proargmodes as arg_modes,\n                         proargtypes::int[] as in_arg_types,\n                         proallargtypes::int[] as all_arg_types,\n                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,\n                         provariadic as arg_variadic_id,\n                         prorettype as ret_type_id,\n                         proretset as ret_set,\n                         prokind /* case when proiswindow then 'w'\n                                                when proisagg then 'a'\n                                                else 'f'\n                                           end */ as kind,\n                         provolatile as volatile_kind,\n                         proisstrict as is_strict,\n                         prosecdef as is_security_definer,\n                         proconfig as configuration_parameters,\n                         procost as cost,\n                         pg_catalog.pg_get_userbyid(proowner) as \"owner\",\n                         prorows as rows ,\n                         proleakproof as is_leakproof  ,\n                         proparallel as concurrency_kind \n                  from pg_catalog.pg_proc\n                  where pronamespace = $1::oid\n                    --  and proname in ( :[*f_names] )\n                    and not (prokind = 'a') /* proisagg */\n                    /* and pg_catalog.age(xmin) <= #TXAGE */)\nselect *\nfrom routines natural join languages"
  parameters:
  - 2200
  result: []
  success: true
  error_details: null
- query: "select P.oid as aggregate_id,\n       P.xmin as state_number,\n       P.proname as aggregate_name,\n       P.proargnames as arg_names,\n       P.proargmodes as arg_modes,\n       P.proargtypes::int[] as in_arg_types,\n       P.proallargtypes::int[] as all_arg_types,\n       A.aggtransfn::oid as transition_function_id,\n       A.aggtransfn::regproc::text as transition_function_name,\n       A.aggtranstype as transition_type,\n       A.aggfinalfn::oid as final_function_id,\n       case when A.aggfinalfn::oid = 0 then null else A.aggfinalfn::regproc::varchar end as final_function_name,\n       case when A.aggfinalfn::oid = 0 then 0 else P.prorettype end as final_return_type,\n       A.agginitval as initial_value,\n       A.aggsortop as sort_operator_id,\n       case when A.aggsortop = 0 then null else A.aggsortop::regoper::varchar end as sort_operator_name,\n       pg_catalog.pg_get_userbyid(P.proowner) as \"owner\"\n       ,\n       A.aggfinalextra as final_extra,\n       A.aggtransspace as state_size,\n       A.aggmtransfn::oid as moving_transition_id,\n       case when A.aggmtransfn::oid = 0 then null else A.aggmtransfn::regproc::varchar end as moving_transition_name,\n       A.aggminvtransfn::oid as inverse_transition_id,\n       case when A.aggminvtransfn::oid = 0 then null else A.aggminvtransfn::regproc::varchar end as inverse_transition_name,\n       A.aggmtranstype::oid as moving_state_type,\n       A.aggmtransspace as moving_state_size,\n       A.aggmfinalfn::oid as moving_final_id,\n       case when A.aggmfinalfn::oid = 0 then null else A.aggmfinalfn::regproc::varchar end as moving_final_name,\n       A.aggmfinalextra as moving_final_extra,\n       A.aggminitval as moving_initial_value,\n       A.aggkind as aggregate_kind,\n       A.aggnumdirectargs as direct_args\n       \n       ,\n       A.aggcombinefn::oid as combine_function_id,\n       case when A.aggcombinefn::oid = 0 then null else A.aggcombinefn::regproc::varchar end as combine_function_name,\n       A.aggserialfn::oid as serialization_function_id,\n       case when A.aggserialfn::oid = 0 then null else A.aggserialfn::regproc::varchar end as serialization_function_name,\n       A.aggdeserialfn::oid as deserialization_function_id,\n       case when A.aggdeserialfn::oid = 0 then null else A.aggdeserialfn::regproc::varchar end as deserialization_function_name,\n       P.proparallel as concurrency_kind\n       \nfrom pg_catalog.pg_aggregate A\njoin pg_catalog.pg_proc P\n  on A.aggfnoid = P.oid\nwhere P.pronamespace = $1::oid\n--  and P.proname in ( :[*f_names] )\n--  and (pg_catalog.age(A.xmin) <= #TXAGE or pg_catalog.age(P.xmin) <= #TXAGE)\norder by P.oid"
  parameters:
  - 2200
  result: []
  success: true
  error_details: null
- query: |-
    select O.oid as op_id,
           O.xmin as state_number,
           oprname as op_name,
           oprkind as op_kind,
           oprleft as arg_left_type_id,
           oprright as arg_right_type_id,
           oprresult as arg_result_type_id,
           oprcode::oid as main_id,
           oprcode::varchar as main_name,
           oprrest::oid as restrict_id,
           oprrest::varchar as restrict_name,
           oprjoin::oid as join_id,
           oprjoin::varchar as join_name,
           oprcom::oid as com_id,
           oprcom::regoper::varchar as com_name,
           oprnegate::oid as neg_id,
           oprnegate::regoper::varchar as neg_name,
           oprcanmerge as merges,
           oprcanhash as hashes,
           pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
    from pg_catalog.pg_operator O
    where oprnamespace = $1::oid
      --  and oprname in ( :[*f_names] )
      --  and pg_catalog.age(xmin) <= #TXAGE
  parameters:
  - 2200
  result: []
  success: true
  error_details: null
- query: |-
    select oid as id,
           xmin as state_number,
           collname as name,
           collcollate as lc_collate,
           collctype as lc_ctype,
           pg_catalog.pg_get_userbyid(collowner) as "owner"
    from pg_catalog.pg_collation
    where collnamespace = $1::oid
      --  and collname in ( :[*f_names] )
      --  and pg_catalog.age(xmin) <= #TXAGE
  parameters:
  - 2200
  result: []
  success: true
  error_details: null
- query: |-
    select O.oid as id,
           O.xmin as state_number,
           opcname as name,
           opcintype::regtype::varchar as in_type,
           case when opckeytype = 0 then null else opckeytype::regtype::varchar end as key_type,
           opcdefault as is_default,
           opcfamily as family_id,
           opfname as family,
           opcmethod as access_method_id,
           pg_catalog.pg_get_userbyid(O.opcowner) as "owner"
    from pg_catalog.pg_opclass O join pg_catalog.pg_opfamily F on F.oid = opcfamily
    where opcnamespace = $1::oid
      --  and opcname in ( :[*f_names] )
      --  and pg_catalog.age(O.xmin) <= #TXAGE
  parameters:
  - 2200
  result: []
  success: true
  error_details: null
- query: |-
    select O.oid as id,
           O.xmin as state_number,
           opfname as name,
           opfmethod as access_method_id,
           pg_catalog.pg_get_userbyid(O.opfowner) as "owner"
    from pg_catalog.pg_opfamily O
    where opfnamespace = $1::oid
      --  and opfname in ( :[*f_names] )
      --  and pg_catalog.age(xmin) <= #TXAGE
  parameters:
  - 2200
  result: []
  success: true
  error_details: null
- query: |-
    select O.oid as id,
           O.amopstrategy as strategy,
           O.amopopr as op_id,
           O.amopopr::regoperator::varchar as op_sig,
           O.amopsortfamily /* null */ as sort_family_id,
           SF.opfname /* null */ as sort_family,
           O.amopfamily as family_id,
           C.oid as class_id
    from pg_catalog.pg_amop O
        left join pg_opfamily F on O.amopfamily = F.oid
        left join pg_opfamily SF on O.amopsortfamily = SF.oid
        left join pg_depend D on D.classid = 'pg_amop'::regclass and O.oid = D.objid and D.objsubid = 0
        left join pg_opclass C on D.refclassid = 'pg_opclass'::regclass and C.oid = D.refobjid and D.refobjsubid = 0
    where C.opcnamespace = $1::oid or C.opcnamespace is null and F.opfnamespace = $2::oid
      --  and pg_catalog.age(O.xmin) <= #TXAGE
    order by C.oid, F.oid
  parameters:
  - 2200
  - 2200
  result: []
  success: true
  error_details: null
- query: |-
    select P.oid as id,
           P.amprocnum as num,
           P.amproc::oid as proc_id,
           P.amproc::regprocedure::varchar as proc_sig,
           P.amproclefttype::regtype::varchar as left_type,
           P.amprocrighttype::regtype::varchar as right_type,
           P.amprocfamily as family_id,
           C.oid as class_id
    from pg_catalog.pg_amproc P
        left join pg_opfamily F on P.amprocfamily = F.oid
        left join pg_depend D on D.classid = 'pg_amproc'::regclass and P.oid = D.objid and D.objsubid = 0
        left join pg_opclass C on D.refclassid = 'pg_opclass'::regclass and C.oid = D.refobjid and D.refobjsubid = 0
    where C.opcnamespace = $1::oid or C.opcnamespace is null and F.opfnamespace = $2::oid
      --  and pg_catalog.age(P.xmin) <= #TXAGE
    order by C.oid, F.oid
  parameters:
  - 2200
  - 2200
  result: []
  success: true
  error_details: null
- query: |-
    with T as ( select --  distinct
                      T.oid as table_id, T.relname as table_name
                from pg_catalog.pg_class T
                     --  , pg_catalog.pg_attribute A
                where T.relnamespace = $1::oid
                  and T.relkind in ('r', 'm', 'v', 'f', 'p')
                  --  and (pg_catalog.age(A.xmin) <= #TXAGE or pg_catalog.age(T.xmin) <= #TXAGE)
                  --  and A.attrelid = T.oid
                 --  and T.relname in ( :[*f_names] )
                )
    select T.table_id,
           C.attnum as column_position,
           C.attname as column_name,
           C.xmin as column_state_number,
           C.atttypmod as type_mod,
           C.attndims as dimensions_number,
           pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
           C.atttypid as type_id,
           C.attnotnull as mandatory,
           pg_catalog.pg_get_expr(D.adbin, T.table_id) /* D.adsrc */ as column_default_expression,
           not C.attislocal as column_is_inherited,
           C.attfdwoptions as options,
           C.attisdropped as column_is_dropped,
           C.attidentity /* null */ as identity_kind,
           C.attgenerated /* null */ as generated
    from T
      join pg_catalog.pg_attribute C on T.table_id = C.attrelid
      left join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
    where attnum > 0
    order by table_id, attnum
  parameters:
  - 2200
  result:
  - column_default_expression: null
    column_is_dropped: false
    column_is_inherited: null
    column_name: id
    column_position: 1
    column_state_number: null
    dimensions_number: null
    generated: null
    identity_kind: null
    mandatory: false
    options: null
    table_id: 50010
    type_id: 23
    type_mod: -1
    type_spec: integer
  - column_default_expression: null
    column_is_dropped: false
    column_is_inherited: null
    column_name: name
    column_position: 2
    column_state_number: null
    dimensions_number: null
    generated: null
    identity_kind: null
    mandatory: false
    options: null
    table_id: 50010
    type_id: 25
    type_mod: -1
    type_spec: text
  success: true
  error_details: null
- query: |-
    select tab.oid               table_id,
           tab.relkind           table_kind,
           ind_stor.relname      index_name,
           ind_head.indexrelid   index_id,
           ind_stor.xmin         state_number,
           ind_head.indisunique  is_unique,
           ind_head.indisprimary is_primary,
           ind_head.indnullsnotdistinct /* false */ nulls_not_distinct,
           pg_catalog.pg_get_expr(ind_head.indpred, ind_head.indrelid) as condition,
           (select pg_catalog.array_agg(inhparent::bigint order by inhseqno)::varchar from pg_catalog.pg_inherits where ind_stor.oid = inhrelid) as ancestors,
           ind_stor.reltablespace tablespace_id,
           opcmethod as access_method_id
    from pg_catalog.pg_class tab
             join pg_catalog.pg_index ind_head
                  on ind_head.indrelid = tab.oid
             join pg_catalog.pg_class ind_stor
                  on tab.relnamespace = ind_stor.relnamespace and ind_stor.oid = ind_head.indexrelid
             left join pg_catalog.pg_opclass on pg_opclass.oid = ANY(indclass)
    where tab.relnamespace = $1::oid
            and tab.relkind in ('r', 'm', 'v', 'p')
            and ind_stor.relkind in ('i', 'I')
    --  and tab.relname in ( :[*f_names] )
    --  and pg_catalog.age(ind_stor.xmin) <= #TXAGE
  parameters:
  - 2200
  result: []
  success: true
  error_details: null
- query: |-
    select T.oid table_id,
           relkind table_kind,
           C.oid::bigint con_id,
           C.xmin::varchar::bigint con_state_id,
           conname con_name,
           contype con_kind,
           conkey con_columns,
           conindid index_id,
           confrelid ref_table_id,
           condeferrable is_deferrable,
           condeferred is_init_deferred,
           confupdtype on_update,
           confdeltype on_delete,
          connoinherit no_inherit,
          pg_catalog.pg_get_expr(conbin, T.oid) /* consrc */ con_expression,
           confkey ref_columns,
           conexclop::int[] excl_operators,
           array(select unnest::regoper::varchar from unnest(conexclop)) excl_operators_str
    from pg_catalog.pg_constraint C
             join pg_catalog.pg_class T
                  on C.conrelid = T.oid
       where relkind in ('r', 'v', 'f', 'p')
         and relnamespace = $1::oid
         and contype in ('p', 'u', 'f', 'c', 'x')
         and connamespace = $2::oid
    --  and pg_catalog.age(T.xmin) <= #TXAGE or pg_catalog.age(c.xmin) <= #TXAGE
  parameters:
  - 2200
  - 2200
  result: []
  success: true
  error_details: null
- query: |-
    select R.ev_class as table_id,
           R.oid as rule_id,
           R.xmin as rule_state_number,
           R.rulename as rule_name,
           pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
           R.ev_enabled as rule_fire_mode,
           R.is_instead as rule_is_instead
    from pg_catalog.pg_rewrite R
    where R.ev_class in (
      select oid
      from pg_catalog.pg_class
      where relnamespace = $1::oid
    --  and relname in ( :[*f_names] )
    )
      --  and pg_catalog.age(R.xmin) <= #TXAGE
      and R.rulename != '_RETURN'::name
    order by R.ev_class::bigint, ev_type
  parameters:
  - 2200
  result: []
  success: true
  error_details: null
- query: |-
    select
           P.oid id,
           P.xmin as state_number,
           polname policyname,
           polrelid table_id,
           polpermissive /* true */ as permissive,
           polroles roles,
           polcmd cmd,
           pg_get_expr(polqual, polrelid) qual,
           pg_get_expr(polwithcheck, polrelid) with_check
    from pg_catalog.pg_policy P
           join pg_catalog.pg_class C on polrelid = C.oid
    where relnamespace = $1::oid
      --  and C.relname in ( :[*f_names] )
      --  and pg_catalog.age(P.xmin) <= #TXAGE
    order by polrelid
  parameters:
  - 2200
  result: []
  success: true
  error_details: null
- query: |-
    select T.tgrelid as table_id,
           T.oid as trigger_id,
           T.xmin as trigger_state_number,
           T.tgname as trigger_name,
           T.tgfoid as function_id,
           pg_catalog.encode(T.tgargs, 'escape') as function_args,
           T.tgtype as bits,
           T.tgdeferrable as is_deferrable,
           T.tginitdeferred as is_init_deferred,
           T.tgenabled as trigger_fire_mode,
           T.tgattr as columns,
           T.tgconstraint != 0 as is_constraint,
           T.tgoldtable /* null */ as old_table_name,
           T.tgnewtable /* null */ as new_table_name,
           pg_catalog.pg_get_triggerdef(T.oid, true) as source_code
    from pg_catalog.pg_trigger T
    join pg_catalog.pg_class TAB on TAB.oid = T.tgrelid and TAB.relnamespace = $1::oid
    where true
      --  and TAB.relname in ( :[*f_names] )
      --  and pg_catalog.age(T.xmin) <= #TXAGE
      and not T.tgisinternal
  parameters:
  - 2200
  result: []
  success: true
  error_details: null
- query: |-
    select D.objoid id, C.relkind::char as kind, D.objsubid sub_id, D.description
    from pg_catalog.pg_description D
      join pg_catalog.pg_class C on D.objoid = C.oid
    where C.relnamespace = $1::oid and C.relkind != 'c' and D.classoid = 'pg_catalog.pg_class'::regclass
    --  and pg_catalog.age(D.xmin) <= #TXAGE
    -- all table-like things + seqs + iets anders?
    union all
    select T.oid id, 'T'::char as kind, D.objsubid sub_id, D.description
    from pg_catalog.pg_description D
      join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
      left join pg_catalog.pg_class C on T.typrelid = C.oid
    where T.typnamespace = $2::oid and (C.relkind = 'c' or C.relkind is null)
    --  and pg_catalog.age(D.xmin) <= #TXAGE
    -- relkind = c (composite types?)
    union all
    select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz')::char as kind, D.objsubid sub_id, D.description
    from pg_catalog.pg_description D
      join pg_catalog.pg_constraint C on D.objoid = C.oid
    where C.connamespace = $3::oid and D.classoid = 'pg_catalog.pg_constraint'::regclass
    --  and pg_catalog.age(D.xmin) <= #TXAGE
    -- table constraints
    union all
    select D.objoid id, 't'::char as kind, D.objsubid sub_id, D.description
    from pg_catalog.pg_description D
      join pg_catalog.pg_trigger T on T.oid = D.objoid
      join pg_catalog.pg_class C on C.oid = T.tgrelid
    where C.relnamespace = $4::oid and D.classoid = 'pg_catalog.pg_trigger'::regclass
    --  and pg_catalog.age(D.xmin) <= #TXAGE
    -- triggers
    union all
    select D.objoid id, 'R'::char as kind, D.objsubid sub_id, D.description
    from pg_catalog.pg_description D
      join pg_catalog.pg_rewrite R on R.oid = D.objoid
      join pg_catalog.pg_class C on C.oid = R.ev_class
    where C.relnamespace = $5::oid and D.classoid = 'pg_catalog.pg_rewrite'::regclass
    --  and pg_catalog.age(D.xmin) <= #TXAGE
    -- rules
    union all
    select D.objoid id, 'F'::char as kind, D.objsubid sub_id, D.description
    from pg_catalog.pg_description D
      join pg_catalog.pg_proc P on P.oid = D.objoid
    where P.pronamespace = $6::oid and D.classoid = 'pg_catalog.pg_proc'::regclass
    --  and pg_catalog.age(D.xmin) <= #TXAGE
    -- more routines
    union all
    select D.objoid id, 'O'::char as kind, D.objsubid sub_id, D.description
    from pg_catalog.pg_description D
      join pg_catalog.pg_operator O on O.oid = D.objoid
    where O.oprnamespace = $7::oid and D.classoid = 'pg_catalog.pg_operator'::regclass
    --  and pg_catalog.age(D.xmin) <= #TXAGE
    -- operators
    union all
    select D.objoid id, 'f'::char as kind, D.objsubid sub_id, D.description
    from pg_catalog.pg_description D
      join pg_catalog.pg_opfamily O on O.oid = D.objoid
    where O.opfnamespace = $8::oid and D.classoid = 'pg_catalog.pg_opfamily'::regclass
    --  and pg_catalog.age(D.xmin) <= #TXAGE
    -- op families
    union all
    select D.objoid id, 'c'::char as kind, D.objsubid sub_id, D.description
    from pg_catalog.pg_description D
      join pg_catalog.pg_opclass O on O.oid = D.objoid
    where O.opcnamespace = $9::oid and D.classoid = 'pg_catalog.pg_opclass'::regclass
    --  and pg_catalog.age(D.xmin) <= #TXAGE
    -- op class
      union all
    select D.objoid id, 'C'::char as kind, D.objsubid sub_id, D.description
    from pg_catalog.pg_description D
      join pg_catalog.pg_collation C on C.oid = D.objoid
    where C.collnamespace = $10::oid and D.classoid = 'pg_catalog.pg_collation'::regclass
    --  and pg_catalog.age(D.xmin) <= #TXAGE

    -- collations
      union all
    select D.objoid id, 'P'::char as kind, D.objsubid sub_id, D.description
    from pg_catalog.pg_description D
           join pg_catalog.pg_policy P on P.oid = D.objoid
           join pg_catalog.pg_class C on P.polrelid = C.oid
    where C.relnamespace = $11::oid and D.classoid = 'pg_catalog.pg_policy'::regclass
    --  and pg_catalog.age(D.xmin) <= #TXAGE

    -- security policies (also by table name...)
  parameters:
  - 2200
  - 2200
  - 2200
  - 2200
  - 2200
  - 2200
  - 2200
  - 2200
  - 2200
  - 2200
  - 2200
  result: []
  success: true
  error_details: null
- query: "select T.oid as object_id,\n                 T.relacl as acl\n          from pg_catalog.pg_class T\n          where relnamespace = $1::oid \n          union all\n          select T.oid as object_id,\n                 T.proacl as acl\n          from pg_catalog.pg_proc T\n          where pronamespace = $2::oid \n          union all\n          select T.oid as object_id,\n                 T.typacl as acl\n          from pg_catalog.pg_type T\n          where typnamespace = $3::oid \n          order by object_id"
  parameters:
  - 2200
  - 2200
  - 2200
  result:
  - acl: null
    object_id: 50010
  success: true
  error_details: null
- query: "select T.oid as object_id,\n               A.attnum as attr_position,\n               A.attacl as acl\n        from pg_catalog.pg_attribute A join pg_catalog.pg_class T on T.oid = A.attrelid\n        where relnamespace = $1::oid\n          and attnum > 0 \n        order by object_id, attr_position"
  parameters:
  - 2200
  result:
  - acl: null
    attr_position: 1
    object_id: 50010
  - acl: null
    attr_position: 2
    object_id: 50010
  success: true
  error_details: null
- query: |-
    select
           T.relkind as view_kind,
           T.oid as view_id,
           pg_catalog.pg_get_viewdef(T.oid, true) as source_text
    from pg_catalog.pg_class T
      join pg_catalog.pg_namespace N on T.relnamespace = N.oid
    where N.oid = $1::oid
      and T.relkind in ('m','v')
      --  and T.relname in ( :[*f_names] )
      --  and (pg_catalog.age(T.xmin) <= #SRCTXAGE or exists(
      --  select A.attrelid from pg_catalog.pg_attribute A where A.attrelid = T.oid and pg_catalog.age(A.xmin) <= #SRCTXAGE))
  parameters:
  - 2200
  result: []
  success: true
  error_details: null
- query: |-
    with A as (
      select oid as table_id, pg_catalog.upper(relkind) as table_kind
      from pg_catalog.pg_class
      where relnamespace = $1::oid
        and relkind in ('r', 'm', 'v', 'f', 'p')
    --  and relname in ( :[*f_names] )
    )
    select table_kind,
           table_id,
           R.oid as rule_id,
           pg_catalog.pg_get_ruledef(R.oid, true) as source_text
    from A join pg_catalog.pg_rewrite R
            on A.table_id = R.ev_class
    where R.rulename != '_RETURN'::name
      --  and pg_catalog.age(R.xmin) <= #SRCTXAGE
  parameters:
  - 2200
  result: []
  success: true
  error_details: null
- query: |-
    with system_languages as ( select oid as lang
                               from pg_catalog.pg_language
                               where lanname in ('c','internal') )
    select oid as id,
           pg_catalog.pg_get_function_arguments(oid) as arguments_def,
           pg_catalog.pg_get_function_result(oid) as result_def,
           pg_catalog.pg_get_function_sqlbody(oid) /* null */ as sqlbody_def,
           prosrc as source_text
    from pg_catalog.pg_proc
    where pronamespace = $1::oid
      --  and pg_proc.proname in ( :[*f_names] )
      --  and pg_catalog.age(xmin) <= #SRCTXAGE
      and not (prokind = 'a') /* proisagg */
      and prolang not in (select lang from system_languages)
      and prosrc is not null
  parameters:
  - 2200
  result: []
  success: true
  error_details: null
- query: |-
    select D.objid as dependent_id,
           D.refobjid as owner_id,
           D.refobjsubid as owner_subobject_id
    from pg_depend D
      join pg_class C_SEQ on D.objid    = C_SEQ.oid and D.classid    = 'pg_class'::regclass::oid
      join pg_class C_TAB on D.refobjid = C_TAB.oid and D.refclassid = 'pg_class'::regclass::oid
    where C_SEQ.relkind = 'S'
      and C_TAB.relkind = 'r'
      and D.refobjsubid <> 0
      and (D.deptype = 'a' or D.deptype = 'i')
      and C_TAB.relnamespace = $1::oid
    order by owner_id
  parameters:
  - 2200
  result: []
  success: true
  error_details: null
