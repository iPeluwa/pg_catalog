name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
  
      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Run cargo tests
        run: cargo test --all --verbose

      - name: Run python tests
        run: pytest -s

      - name: Run rust coverage
        run: |
          cargo install cargo-tarpaulin
          cargo tarpaulin --out Xml --timeout 120

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: tarpaulin-report
          path: cobertura.xml

      - name: Zip schema files
        if: github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main'
        run: zip -r postgres-schema-nightly.zip pg_catalog_data/pg_schema

      - name: Upload schema to release
        if: github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: schema-nightly-${{ github.run_id }}
          name: postgres-schema-nightly
          prerelease: true
          files: postgres-schema-nightly.zip

